{
  "version": 3,
  "sources": ["../scripts/user.ts", "../scripts/auth.ts", "../scripts/eventHandlers.ts", "../scripts/ui.ts", "../scripts/app.ts"],
  "sourcesContent": ["export interface User {\n    avatar?: string\n    collectionId: string\n    collectionName: string\n    created: Date\n    email: string\n    emailVisibility: boolean\n    id: string\n    name?: string\n    updated: Date\n    username?: string\n    verified: string\n}\n\nexport function getUser(obj: {}): User {\n    return obj as User\n}\n", "import { User, getUser } from './user'\n\ninterface AuthData {\n    method: 'post'\n    body: FormData\n}\n\nexport async function tryLogin(data: AuthData): Promise<User | Error> {\n    const response = await fetch(\n        `http://34.42.14.226:8090/api/collections/users/auth-with-password`,\n        data\n    )\n\n    return await _parseResponse(response, 'record')\n}\n\nexport async function trySignup(data: AuthData): Promise<User | Error> {\n    const response = await fetch(\n        `http://34.42.14.226:8090/api/collections/users/records`,\n        data\n    )\n\n    return await _parseResponse(response)\n}\n\nexport function saveAuthLocal(userId: string) {\n    localStorage.setItem('hasUserSaved', 'true')\n    localStorage.setItem('id', userId)\n}\n\nexport async function tryLocalLogin(): Promise<User | Error> {\n    if (!localStorage.getItem('hasUserSaved')) {\n        return Error('User ID is not saved locally')\n    }\n\n    const id = localStorage.getItem('id') as string\n\n    const response = await fetch(\n        `http://34.42.14.226:8090/api/collections/users/records/${id}`\n    )\n\n    return await _parseResponse(response)\n}\n\nexport function clearAuthLocal() {\n    localStorage.removeItem('hasUserSaved')\n    localStorage.removeItem('id')\n}\n\nasync function _parseResponse(\n    response: Response,\n    propName?: string\n): Promise<User | Error> {\n    const json = await response.json()\n\n    if (response.status != 200) {\n        return Error(json.message)\n    }\n\n    return getUser(propName ? json[propName] : json)\n}\n", "import { tryLogin, trySignup } from './auth'\nimport { User } from './user'\n\nexport async function signupOrLogin(e: SubmitEvent): Promise<User | Error> {\n    if (!(e.target instanceof HTMLFormElement)) {\n        return Error('Event target not an instance of HTMLFormElement')\n    }\n\n    const form = new FormData(e.target)\n    const data = {\n        method: 'post',\n        body: form,\n    } as const\n\n    if (e.submitter?.id.includes('login')) {\n        return await tryLogin(data)\n    }\n\n    const pw = form.get('password') as string | null\n    const email = form.get('identity') as string | null\n    if (!pw || !email) {\n        return Error('Password or email not defined')\n    }\n\n    form.append('passwordConfirm', pw)\n    form.set('email', email)\n\n    return await trySignup(data)\n}\n\nexport function logout(e: PointerEvent): void {\n    console.log('logoutHandler', e)\n\n    document.querySelector('.login')!.classList.remove('hidden')\n    document.querySelector('#logout-btn')!.classList.add('hidden')\n    document.querySelector('.welcome-user')!.textContent = ''\n}\n\nexport function shuffleColors(): void {\n    console.log('shuffleColorsHandler')\n}\n\nexport function reset(): void {\n    console.log('resetHandler')\n}\n\nexport function selectColor(num: 1 | 2): void {\n    console.log('selectColorHandler', num)\n}\n", "import { clearAuthLocal, saveAuthLocal } from './auth'\nimport {\n    signupOrLogin,\n    logout,\n    shuffleColors,\n    selectColor,\n    reset,\n} from './eventHandlers'\n\nexport const addEventListeners = () => {\n    document\n        .querySelector('.login')!\n        .addEventListener('submit', async (e: SubmitEvent) => {\n            const rv = await signupOrLogin(e)\n\n            if (rv instanceof Error) {\n                console.log(rv)\n                return\n            }\n\n            const stayLoggedInElement = (\n                e.target as HTMLFormElement\n            ).elements.namedItem('stayLoggedIn')\n\n            if (\n                stayLoggedInElement instanceof HTMLInputElement &&\n                stayLoggedInElement.value === 'on'\n            ) {\n                saveAuthLocal(rv.id)\n            }\n\n            updateLogin(rv.email)\n        })\n    document\n        .querySelector('#logout-btn')!\n        .addEventListener('click', e => logout(e as PointerEvent))\n    document\n        .querySelector('.new-colors')!\n        .addEventListener('click', () => shuffleColors())\n    document\n        .querySelector('.clear-data')!\n        .addEventListener('click', () => reset())\n    document\n        .querySelector('#color1')!\n        .addEventListener('click', () => selectColor(1))\n    document\n        .querySelector('#color2')!\n        .addEventListener('click', () => selectColor(2))\n}\n\nexport function updateLogin(user: string) {\n    document.querySelector('.login')!.classList.add('hidden')\n    document.querySelector('#logout-btn')!.classList.remove('hidden')\n    document.querySelector('.welcome-user')!.textContent = `Welcome ${user}`\n}\n", "import { addEventListeners, updateLogin } from './ui'\nimport { Game } from './game'\nimport { tryLocalLogin } from './auth'\nimport { User } from './user'\n\nexport interface App {\n    user?: User\n    game?: Game\n}\n\nconst app: App = {}\n\naddEventListeners()\ntryLocalLogin().then(response => {\n    if (response instanceof Error || !response) {\n        return\n    }\n\n    updateLogin(response.email)\n})\n"],
  "mappings": "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",
  "names": []
}
